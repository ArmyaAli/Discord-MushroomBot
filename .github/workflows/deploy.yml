name: Build Test Deploy
on:
  push:
    branches: [ prod ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Grab Node 16.60
      uses: actions/setup-node@v2
      with: 
        node-version: '16.6.0'
    - name: clean install
      run: npm ci
    - name: build
      run: npm run build --if-present

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create SSH Key
      run: 'echo "$SSH_KEY" > key'
      shell: bash
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    - name: set permissions
      run: chmod 400 key
    - name: Create .env file and populate it
      run: 'touch .env && echo "$ENV" > .env'
      shell: bash
      env:
        ENV: ${{ secrets.ENV_FILE }}
    - name: Send .env file to PI
      run: scp -o StrictHostKeyChecking=no -i key .env $USER@$ENDPOINT:~/dev/Discord-MushroomBot
      env:
        PORT: ${{ secrets.SSH_PORT }}
        USER: ${{ secrets.USER }}
        ENDPOINT: ${{ secrets.ENDPOINT }}
    - name: SSH & Deploy
      run: |
        ssh -t -o StrictHostKeyChecking=no -p $PORT -i key $USER@$ENDPOINT -t \
        '
        bash -i -c 
        "
        cd ~/dev/Discord-MushroomBot;
        git pull;
        rm -rf node_modules;
        npm ci --production;
        pm2 kill;
        npm run clean;
        npm run build;
        pm2 start java -- -jar lavalink-server/Lavalink.jar;
        pm2 start output/src/bot.js;
        "'
      env:
        PORT: ${{ secrets.SSH_PORT }}
        USER: ${{ secrets.USER }}
        ENDPOINT: ${{ secrets.ENDPOINT }}
